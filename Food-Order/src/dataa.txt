import React, { useState, useEffect } from 'react';
import ResCard from './ResCard';
import Shimmer from './Shimmer';

const Body = () => {
  const [List, setList] = useState([]);
  const [searchText, setSearchText]=useState("")
  const [filteredRestaurants, setFilteredRestaurants] = useState([]);

// https://www.swiggy.com/dapi/restaurants/list/v5?lat=12.9351929&lng=77.62448069999999&page_type=DESKTOP_WEB_LISTING
// https://corsproxy.io/?

useEffect(() => {
  fetchData()
},[])

const fetchData = async () => {
  const data = await fetch("https://www.swiggy.com/dapi/restaurants/list/v5?lat=12.9351929&lng=77.62448069999999&page_type=DESKTOP_WEB_LISTING")

  const json = await data.json()
  // console.log(json);
  

  setList(json?.data?.cards[2]?.card?.card?.gridElements?.infoWithStyle?.restaurants)
  setFilteredRestaurants(json?.data?.cards[2]?.card?.card?.gridElements?.infoWithStyle?.restaurants)
}



const FilterAll=()=>{
  const newDataList=List.filter(data => data.info.avgRating > 4.0)
  setFilteredRestaurants(newDataList)
  
}
const ResetFilter=()=>{
  const newDataLists=List.filter(data => data.info.avgRating > 0)
  setFilteredRestaurants(newDataLists)
}






   return   (
    <div className="flex flex-col items-center mt-20 ml-14">
      <div>
        <div className="flex gap-4 mb-4">
          <button onClick={FilterAll} className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
            Filter All
          </button>
          <button onClick={ResetFilter} className="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">
            Reset Filter
          </button>
          <div>
            <input type="text" placeholder="Search" 
            value={searchText} onChange={(e)=>setSearchText(e.target.value)}
          
            className="border border-gray-300 rounded-md px-3 py-2" />
            <button 
            onClick={()=>{
              const filterData =List.filter(data=>data.info.name.toLowerCase().includes(searchText.toLowerCase()))
              setFilteredRestaurants(filterData)
              

            }}>search</button>
          </div>
        </div>
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 mx-auto max-w-screen-lg">
          {
            filteredRestaurants.map((data, id) => (
              <ResCard
                key={data.info.id}
                name={data.info.name}
                avgRating={data.info.avgRating}
                cloudiaryImageId={data.info.cloudinaryImageId}
                costForTwo={data.info.costForTwo}
                cuisines={data.info.cuisines}
                sla={data.info.sla}
              />
            ))}

        </div>
      </div>
    </div>
  );
};

export default Body;
